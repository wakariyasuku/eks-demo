name: Lint and Test

on:
  push:
    branches:
      - main
    paths:
      - 'app/**'
  pull_request:
    branches:
      - main
    paths:
      - 'app/**'

jobs:
  lint-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install -r app/requirements.txt
        pip install pylint requests

    - name: Run Lint Test
      run: pylint app/*.py --exit-zero

    - name: Build Docker Image
      run: docker build -t streamlit-app:latest ./app

    # Trivy(aquasecurity/trivy-action@master) is one of the choices too.
    # Need to ennable Inspector on Management Condole, have permission to access the ScanSbom Action on the role
    # and write custom trust policy based on the document insruction.

    - name: Scan with Inspector 
      id: inspector
      uses: aws-actions/vulnerability-scan-github-action-for-amazon-inspector@v1
      with:
        artifact_type: 'container'
        artifact_path: streamlit-app:latest
        critical_threshold: 1  # Flag is triggered if there is at least one critical vulnerability
        high_threshold: 0 # Ignore vulnerabilities with a severity lower than Medium
        medium_threshold: 0
        low_threshold: 0
        other_threshold: 0

    - name: Stop the build if vulnerabilities are detected 
      if: ${{ steps.inspector.outputs.vulnerability_threshold_exceeded == 'true' }}
      run: |
        echo "Critical vulnerabilities detected. Stopping the build."
        exit 1

    - name: Run Docker Image
      run: docker run -d -p 8501:8501 --name streamlit-app streamlit-app:latest

    - name: Run HTTP Request Test
      run: python app/test/http-test.py

    - name: Stop and Remove Docker Image
      run: |
        docker stop streamlit-app
        docker rm streamlit-app
